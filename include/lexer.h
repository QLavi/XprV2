#pragma once

typedef enum {
    TOKEN_LEFT_BRACE, TOKEN_RIGHT_BRACE,
    TOKEN_LEFT_PAREN, TOKEN_RIGHT_PAREN,

    TOKEN_PLUS, TOKEN_MINUS, TOKEN_STAR, TOKEN_SLASH,
    TOKEN_PLUS_EQUAL, TOKEN_MINUS_EQUAL, TOKEN_STAR_EQUAL, TOKEN_SLASH_EQUAL,

    TOKEN_LESS, TOKEN_LESS_EQUAL, TOKEN_GREATER, TOKEN_GREATER_EQUAL,
    TOKEN_BANG, TOKEN_BANG_EQUAL, TOKEN_EQUAL, TOKEN_EQUAL_EQUAL,

    TOKEN_NUMBER, TOKEN_IDENTIFIER, TOKEN_PRINT,
    TOKEN_IF, TOKEN_ELSE, TOKEN_WHILE, TOKEN_LOOP, TOKEN_SEMICOLON,
    TOKEN_ERROR, TOKEN_EOF
} Token_Type;

typedef struct {
    Token_Type type;
    char* chars;
    int length;
} Token;

void init_lexer(char* src);
Token next_token(void);
